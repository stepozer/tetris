/*================= Модуль проверок и т.д. ==================*/
       
extern int Telo[n][m];

/*================= Перечень функций модуля =================*/
down(int nstroki); // Сдвиг вниз
int OCTAHOBKA1();  // Проверка на возможность движения вниз
int OCTAHOBKA2();  // Проверка на возможность движения вправо
int OCTAHOBKA3();  // Проверка на возможность движения влево
int BpaLLLeHue(int koopgX,int koopgY);
KOHELL();          // Остановка фигуры
HABAHABA();        // Удаление заполненной строки
/*========================= Сдвиг вниз ======================*/
down(int nstroki)
{
  int i,j;
  for(i=nstroki;i>1;i--)
   for(j=1;j<m-1;j++)
    {
     Telo[i][j]=Telo[i-1][j];
     Telo[i-1][j]=0;
    }
  return 0;
}
/*/*========= Проверка на возможность движения вниз ==========*/
int OCTAHOBKA1()
{
  int i,j;
  for(i=0;i<n;i++)
    for(j=0;j<m;j++)
      if (((Telo[i][j]==1)&&(Telo[i+1][j]==2))||
	  ((Telo[i][j]==1)&&(Telo[i+1][j]==3)))
	 return 1;
  return 0;
}
/*========= Проверка на возможность движения вправо ========*/
int OCTAHOBKA2()
{
  int i,j;
  for(i=0;i<n;i++)
   for(j=1;j<m;j++)
     if ((Telo[i][j]==1)&&((Telo[i][j+1]==2)||(Telo[i][j+1]==3)))
	return 1;
  return 0;
}
/*========= Проверка на возможность движения влево =========*/
int OCTAHOBKA3()
{
  int i,j;
  for(i=0;i<n;i++)
   for(j=1;j<m;j++)
     if ((Telo[i][j]==1)&&((Telo[i][j-1]==2)||(Telo[i][j-1]==3)))
	return 1;
  return 0;
}
/*============ Проверка на возможность вращения ============*/
int BpaLLLeHue(int Telo[n][m],int mas[4][4],int Y,int X)
{
   int i,j,i1,j1; 
   for(i=0,i1=X;i<4;i++,i1++)
    for(j=0,j1=Y;j<4;j++,j1++)
      if(
          (mas[i][j]==1)&&
           (
             (Telo[i1][j1]==2)||
             (Telo[i1][j1]==3)
           ) 
        )

        return 0;   
   
   return 1;
}
/*===================== Остановка фигуры ===================*/
KOHELL()
{
  int i,j;
  for(i=0;i<n;i++)
   for(j=0;j<m;j++)
     if (Telo[i][j]==1) Telo[i][j]=3;
  return 0;
}
/*=============== Удаление заполненной строки ==============*/
HABAHABA()
{
  int i,j,j1,k,bool=0;
  for(k=0;k<n-1;k++)
   for(i=n-1;i>1;i--)
    {
     for(j=1;j<m-2;j++)
       if((Telo[i][j]==Telo[i][j+1])&&(Telo[i][j]==3)) bool=1;
	 else { bool=0; break; }
     if (bool)
      {
	Xo6oTaHue(ozki+=10);
	for(j1=1;j1<m-1;j1++)
        Telo[i][j1]=0;
	PucoBaHue(0,0);
	PucoBaHue(0,3);
	down(i);
	PucoBaHue(14,3);
      }
    }
  return 0;  
}